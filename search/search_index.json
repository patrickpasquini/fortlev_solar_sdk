{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Fortlev Solar SDK Documentation","text":"<p>Welcome to the Fortlev Solar SDK Documentation. This library is designed to simplify integration with Fortlev Solar APIs.</p>"},{"location":"#installation","title":"Installation","text":"<p>You can install the SDK using pip:</p> <pre><code>pip install fortlev_solar_sdk\n</code></pre>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#authenticate","title":"Authenticate","text":"<p>First, you need to <code>authenticate</code>. Once authenticated, the token will be stored in the client, allowing you to access all the methods that require authentication.</p> <pre><code>from fortlev_solar_sdk import FortlevSolarClient\n\nclient = FortlevSolarClient()\nclient.authenticate(username=\"john@doe.com\", pwd=\"Mypassword123@\")\n</code></pre> Note <p>You can set the username and password in your <code>.env</code> file, use <code>FORTLEV_SOLAR_USERNAME</code> and <code>FORTLEV_SOLAR_PWD</code></p> Warning <p>It is recommended to use the <code>FortlevSolarClient(env=\"DEV\")</code> in development mode during the development phase</p> <p>If you don't have an account, you can use the <code>register</code> method to create one:</p> <pre><code>client.register(name=\"John Doe\", email=\"john@doe.com\", phone_number=\"51924979815\", cnpj=\"36528955000163\", pwd=\"Mypassword123@\")\n</code></pre>"},{"location":"#available-features","title":"Available Features","text":"<p>Once you're set up, you can:</p> <ul> <li>Create Orders: Seamlessly create orders, fully integrated with Fortlev Solar's inventory. <pre><code>orders = client.orders(power=12, voltage=\"220\", phase=1)\n</code></pre></li> <li>Simulate Financing Installments: Run simulations for the financing installments of your photovoltaic kit. <pre><code>financing = client.financing(value=10000)\n</code></pre></li> </ul> <p>To explore all the available methods and their usage Click here</p>"},{"location":"#api-reference","title":"API Reference","text":"<p>For a complete reference of available endpoints, visit the official API documentation:</p> <p>Fortlev Solar API Documentation</p>"},{"location":"#fortlev-solar-platform","title":"Fortlev Solar Platform","text":"<p>To access the Fortlev Solar platform, where you can manage your orders and more, visit:</p> <p>Fortlev Solar Platform</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions to the SDK! If you'd like to report an issue or contribute to the project, please visit our GitHub repository.</p> <p>For more detailed information on how to use each class and method in the SDK, please refer to the documentation sections in the sidebar.</p>"},{"location":"errors/request_error/","title":"RequestError","text":"<p>               Bases: <code>BaseError</code></p> <p>An exception for errors encountered during HTTP requests.</p> Inherits from <p>BaseError: Provides the status code and error message attributes.</p> <p>Attributes:</p> Name Type Description <code>status_code</code> <code>int</code> <p>The HTTP status code associated with the request error.</p> <code>error_message</code> <code>str</code> <p>A descriptive message explaining the request error.</p>"},{"location":"models/auth/","title":"Auth","text":"<p>Represents authentication details required for API access.</p> <p>Attributes:</p> Name Type Description <code>access_token</code> <code>str</code> <p>The token used to authenticate API requests.</p> <code>scope</code> <code>str</code> <p>The specific scope of access granted by the token.</p> <code>token_type</code> <code>str</code> <p>The type of the token, defaulting to 'Bearer'.</p> <code>_expiry_time</code> <code>datetime</code> <p>The datetime at which the token expires.</p>"},{"location":"models/auth/#fortlev_solar_sdk.auth.Auth.is_expired","title":"<code>is_expired()</code>","text":"<p>Checks if the authentication token has expired.</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>Returns True if the token has expired, otherwise False.</p>"},{"location":"models/city/","title":"City","text":"<p>Represents a city with geographic and administrative details.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <p>The unique identifier for the city.</p> <code>name</code> <code>str</code> <p>The name of the city.</p> <code>ibge_code</code> <code>str</code> <p>The IBGE code associated with the city.</p> <code>isopleth</code> <code>int</code> <p>The isopleth value indicating a specific attribute of the city.</p> <code>latitude</code> <code>float</code> <p>The latitude coordinate of the city.</p> <code>longitude</code> <code>float</code> <p>The longitude coordinate of the city.</p>"},{"location":"models/city/#fortlev_solar_sdk.city.City.from_dict","title":"<code>from_dict(data)</code>  <code>classmethod</code>","text":"<p>Creates a City instance from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing city details.</p> required <p>Returns:</p> Name Type Description <code>City</code> <code>City</code> <p>A new City instance with attributes populated from the dictionary.</p>"},{"location":"models/component/","title":"Component","text":"<p>               Bases: <code>Identity</code></p> <p>Represents a component with identifying details and associated files.</p> Inherits from <p>Identity: Includes basic identity attributes such as id, name, and family.</p> <p>Attributes:</p> Name Type Description <code>code</code> <code>str</code> <p>The unique code assigned to the component.</p> <code>attachments</code> <code>list[File]</code> <p>A list of File instances associated with the component.</p>"},{"location":"models/component/#fortlev_solar_sdk.component.Component.from_dict","title":"<code>from_dict(data)</code>  <code>classmethod</code>","text":"<p>Creates a Component instance from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing component details.</p> required <p>Returns:</p> Name Type Description <code>Component</code> <code>Component</code> <p>A new Component instance with attributes populated from the dictionary.</p>"},{"location":"models/financing/","title":"Financing","text":"<p>Represents financing information provided by a bank.</p> <p>Attributes:</p> Name Type Description <code>bank</code> <code>str</code> <p>The name of the bank providing the financing.</p> <code>installments</code> <code>list[Installment]</code> <p>A list of Installment instances representing the financing terms.</p> <p>Methods:</p> Name Description <code>from_dict</code> <p>dict): Creates a Financing instance from a dictionary.</p>"},{"location":"models/financing/#fortlev_solar_sdk.financing.Financing.from_dict","title":"<code>from_dict(data)</code>  <code>classmethod</code>","text":"<p>Creates a Financing instance from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing component details.</p> required <p>Returns:</p> Name Type Description <code>Financing</code> <code>Financing</code> <p>A new Financing instance with attributes populated from the dictionary.</p>"},{"location":"models/layout/","title":"Layout","text":"<p>Represents the layout configuration for solar modules in a PV kit.</p> <p>Attributes:</p> Name Type Description <code>line_quantity</code> <code>int</code> <p>The number of lines in the layout.</p> <code>modules_per_line</code> <code>int</code> <p>The number of modules per line in the layout.</p> <code>line_length</code> <code>float</code> <p>The length of each line in the layout.</p>"},{"location":"models/layout/#fortlev_solar_sdk.order.Layout.from_dict","title":"<code>from_dict(data)</code>  <code>classmethod</code>","text":"<p>Creates an instance of Layout from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing layout information.</p> required <p>Returns:</p> Name Type Description <code>Layout</code> <code>Layout</code> <p>An instance of the Layout class.</p>"},{"location":"models/order/","title":"Order","text":"<p>               Bases: <code>Summary</code></p> <p>Represents an order containing multiple PV kits and delivery information.</p> Inherits from <p>Summary: Provides attributes such as full_price, final_price, discount, and power.</p> <p>Attributes:</p> Name Type Description <code>pv_kits</code> <code>list[PvKit]</code> <p>A list of PV kits included in the order.</p> <code>delivery_at</code> <code>str</code> <p>The delivery location or city for the order.</p>"},{"location":"models/order/#fortlev_solar_sdk.order.Order.from_dict","title":"<code>from_dict(data)</code>  <code>classmethod</code>","text":"<p>Creates an instance of Order from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing order information.</p> required <p>Returns:</p> Name Type Description <code>Order</code> <code>Order</code> <p>An instance of the Order class.</p>"},{"location":"models/pv_kit/","title":"PvKit","text":"<p>               Bases: <code>Summary</code></p> <p>Represents a PV kit, which includes components, structural information, and other attributes.</p> Inherits from <p>Summary: Provides attributes such as full_price, final_price, discount, and power.</p> <p>Attributes:</p> Name Type Description <code>pv_kit_components</code> <code>list[PvKitComponent]</code> <p>A list of components included in the PV kit.</p> <code>structural_informations</code> <code>list[StructuralInformation] | None</code> <p>Structural details of the PV kit.</p> <code>display_images</code> <code>list[File]</code> <p>A list of image files for displaying the PV kit.</p> <code>voltage</code> <code>str</code> <p>The voltage rating of the PV kit.</p> <code>phase</code> <code>int</code> <p>The phase configuration of the PV kit.</p>"},{"location":"models/pv_kit/#fortlev_solar_sdk.order.PvKit.from_dict","title":"<code>from_dict(data)</code>  <code>classmethod</code>","text":"<p>Creates an instance of PvKit from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing PV kit information.</p> required <p>Returns:</p> Name Type Description <code>PvKit</code> <code>PvKit</code> <p>An instance of the PvKit class.</p>"},{"location":"models/pv_kit_component/","title":"PvKitComponent","text":"<p>Represents a component used in a PV kit and its quantity.</p> <p>Attributes:</p> Name Type Description <code>component</code> <code>Component</code> <p>The component included in the PV kit.</p> <code>quantity</code> <code>int</code> <p>The quantity of the component used in the PV kit.</p>"},{"location":"models/pv_kit_component/#fortlev_solar_sdk.order.PvKitComponent.from_dict","title":"<code>from_dict(data)</code>  <code>classmethod</code>","text":"<p>Creates an instance of PvKitComponent from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing component information.</p> required <p>Returns:</p> Name Type Description <code>PvKitComponent</code> <code>PvKit</code> <p>An instance of the PvKitComponent class.</p>"},{"location":"models/structural_information/","title":"StructuralInformation","text":"<p>Represents the structural information related to a PV kit installation.</p> <p>Attributes:</p> Name Type Description <code>surface</code> <code>Surface</code> <p>The surface where the PV kit is installed.</p> <code>is_portrait</code> <code>bool</code> <p>Indicates if the modules are installed in portrait orientation.</p> <code>layouts</code> <code>list[Layout]</code> <p>A list of layout configurations.</p>"},{"location":"models/structural_information/#fortlev_solar_sdk.order.StructuralInformation.from_dict","title":"<code>from_dict(data)</code>  <code>classmethod</code>","text":"<p>Creates an instance of StructuralInformation from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing structural information.</p> required <p>Returns:</p> Name Type Description <code>StructuralInformation</code> <code>StructuralInformation</code> <p>An instance of the StructuralInformation class.</p>"},{"location":"models/surface/","title":"Surface","text":"<p>               Bases: <code>Identity</code></p> <p>Represents a surface used in a PV kit installation, inheriting from Identity.</p> Inherits from <p>Identity: Provides attributes such as id, name, and family.</p> <p>Methods:</p> Name Description <code>from_dict </code> <p>Creates an instance of Surface from a dictionary.</p>"},{"location":"models/surface/#fortlev_solar_sdk.surface.Surface.from_dict","title":"<code>from_dict(data)</code>  <code>classmethod</code>","text":"<p>Creates an instance of Surface from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing surface information.</p> required <p>Returns:</p> Name Type Description <code>Surface</code> <code>Surface</code> <p>An instance of the Surface class.</p>"},{"location":"reference/fortlev_solar_client/","title":"FortlevSolarClient","text":"<p>Client for interacting with the Fortlev Solar API. Provides methods for authentication and retrieving data related to surfaces, components, cities, and orders.</p> <p>Attributes:</p> Name Type Description <code>base_url</code> <code>str</code> <p>The base URL of the Fortlev Solar API.</p> <p>Methods:</p> Name Description <code>register</code> <p>Register a new partner in the Fortlev Solar</p> <code>authenticate</code> <p>Authenticates the user and sets authorization headers.</p> <code>surfaces</code> <p>Retrieves a list of available surfaces.</p> <code>components</code> <p>Retrieves a list of available components.</p> <code>cities</code> <p>Retrieves a list of cities with specific details.</p> <code>orders</code> <p>Retrieves orders based on given parameters.</p> <code>financing</code> <p>Retrieves financing options based on the specified investment value.</p>"},{"location":"reference/fortlev_solar_client/#fortlev_solar_sdk.fortlev_solar_client.FortlevSolarClient.authenticate","title":"<code>authenticate(username, pwd)</code>","text":"<p>Authenticates the client with the provided username and password.</p> <p>This method sends a request to [POST] /user/login</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>The username for authentication.</p> required <code>pwd</code> <code>str</code> <p>The password for authentication.</p> required <p>Returns:</p> Name Type Description <code>Auth</code> <code>Auth</code> <p>The authentication details if successful.</p> <p>Raises:</p> Type Description <code>RequestError</code> <p>If the authentication fails.</p>"},{"location":"reference/fortlev_solar_client/#fortlev_solar_sdk.fortlev_solar_client.FortlevSolarClient.base_get_request","title":"<code>base_get_request(endpoint, Model, query_params={})</code>","text":"<p>Sends a GET request to the specified endpoint with optional query parameters.</p> <p>Parameters:</p> Name Type Description Default <code>endpoint</code> <code>str</code> <p>The endpoint to request data from.</p> required <code>Model</code> <code>type</code> <p>The model class to parse the response data into.</p> required <code>query_params</code> <code>(dict, Optional)</code> <p>Optional query parameters for the request.</p> <code>{}</code> <p>Returns:</p> Type Description <code>list[object]</code> <p>list[Model]: A list of instances of the specified Model parsed from the response.</p> <p>Raises:</p> Type Description <code>RequestError</code> <p>If the request fails.</p>"},{"location":"reference/fortlev_solar_client/#fortlev_solar_sdk.fortlev_solar_client.FortlevSolarClient.cities","title":"<code>cities(query_params={})</code>","text":"<p>Retrieves a list of cities with specific details.</p> <p>This method sends a request to [GET] /brazilian-city</p> <p>Parameters:</p> Name Type Description Default <code>query_params</code> <code>(dict, Optional)</code> <p>Optional query parameters for filtering the cities.</p> <code>{}</code> <p>Returns:</p> Type Description <code>list[City]</code> <p>list[City]: A list of City instances.</p>"},{"location":"reference/fortlev_solar_client/#fortlev_solar_sdk.fortlev_solar_client.FortlevSolarClient.components","title":"<code>components(query_params={})</code>","text":"<p>Retrieves a list of available components.</p> <p>This method sends a request to [GET] /component/all</p> <p>Parameters:</p> Name Type Description Default <code>query_params</code> <code>(dict, Optional)</code> <p>Optional query parameters for filtering the components.</p> <code>{}</code> <p>Returns:</p> Type Description <code>list[Component]</code> <p>list[Component]: A list of Component instances.</p>"},{"location":"reference/fortlev_solar_client/#fortlev_solar_sdk.fortlev_solar_client.FortlevSolarClient.financing","title":"<code>financing(value, entry_value=0, grace=1)</code>","text":"<p>Retrieves financing options based on the specified investment value.</p> <p>This method sends a request to [POST] /financing/simplified</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>The total investment value.</p> required <code>entry_value</code> <code>float</code> <p>The upfront entry value. Defaults to 0.</p> <code>0</code> <code>grace</code> <code>Literal[1, 2, 3, 4, 5, 6]</code> <p>The number of grace months before starting payments. Defaults to 1.</p> <code>1</code> <p>Returns:</p> Type Description <code>list[Financing]</code> <p>list[Financing]: A list of Financing instances representing the available financing options.</p> <p>Raises:</p> Type Description <code>RequestError</code> <p>If the request fails or if the API returns an error response.</p> <p>Examples:</p> <p>Authenticate and retrieve a list of financing:</p> <pre><code>&gt;&gt;&gt; client = FortlevSolarClient()\n&gt;&gt;&gt; client.authenticate(username=\"username\", pwd=\"password\")\n&gt;&gt;&gt; financing = client.financing(value=15000, entry_value=5000, grace=3)\n</code></pre>"},{"location":"reference/fortlev_solar_client/#fortlev_solar_sdk.fortlev_solar_client.FortlevSolarClient.orders","title":"<code>orders(power=0, voltage='220', phase=1, surface=None, city=None)</code>","text":"<p>Retrieves a list of orders based on the given parameters.</p> <p>This method sends a request to [POST] /order</p> <p>Parameters:</p> Name Type Description Default <code>power</code> <code>(float, Optional)</code> <p>The target power for the order. Defaults to 0.</p> <code>0</code> <code>voltage</code> <code>(Literal['220', '380', '+'], Optional)</code> <p>The voltage type. Defaults to \"220\".</p> <code>'220'</code> <code>phase</code> <code>(Literal[1, 2, 3], Optional)</code> <p>The phase (1, 2, or 3). Defaults to 1.</p> <code>1</code> <code>surface</code> <code>(str, Optional)</code> <p>The surface ID for the order. If None, no specific surface will be used. Defaults to None.</p> <code>None</code> <code>city</code> <code>(str, Optional)</code> <p>The city ID for the order. If None, the user's registered city will be used. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[Order]</code> <p>list[Order]: A list of Order instances.</p> <p>Raises:</p> Type Description <code>RequestError</code> <p>If the client is not authenticated or the API request fails.</p> Tip <p>You can generate a catalog of available kits by setting <code>power=0</code>.</p> <p>Examples:</p> <p>Authenticate and retrieve a list of orders:</p> <pre><code>&gt;&gt;&gt; client = FortlevSolarClient()\n&gt;&gt;&gt; client.authenticate(username=\"username\", pwd=\"password\")\n&gt;&gt;&gt; orders = client.orders(power=5.0, voltage=\"220\", phase=1, surface=\"surface_id\", city=\"city_id\")\n</code></pre>"},{"location":"reference/fortlev_solar_client/#fortlev_solar_sdk.fortlev_solar_client.FortlevSolarClient.register","title":"<code>register(name, email, phone_number, cnpj, pwd)</code>","text":"<p>Register a new partner in Fortlev Solar.</p> <p>This method sends a request to [POST] /user/sign-up</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the user to be registered.</p> required <code>email</code> <code>str</code> <p>The email address of the user. Must be a valid email format.</p> required <code>phone_number</code> <code>str</code> <p>The user's phone number. Must contain 11 digits.</p> required <code>cnpj</code> <code>str</code> <p>The CNPJ number of the user or company. Must follow CNPJ formatting rules.</p> required <code>pwd</code> <code>str</code> <p>The password for the user's account. Must meet specified complexity requirements.</p> required <p>Returns:</p> Name Type Description <code>SignUpResponse</code> <code>RegisterResponse</code> <p>An instance containing a message and the validation status of the email.</p> <p>Raises:</p> Type Description <code>RequestError</code> <p>If the registration request fails or if the server returns an error response.</p>"},{"location":"reference/fortlev_solar_client/#fortlev_solar_sdk.fortlev_solar_client.FortlevSolarClient.surfaces","title":"<code>surfaces(query_params={})</code>","text":"<p>Retrieves a list of available surfaces.</p> <p>This method sends a request to [GET] /surface</p> <p>Parameters:</p> Name Type Description Default <code>query_params</code> <code>(dict, Optional)</code> <p>Optional query parameters for filtering the surfaces.</p> <code>{}</code> <p>Returns:</p> Type Description <code>list[Surface]</code> <p>list[Surface]: A list of Surface instances.</p>"}]}